services:
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: nest-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "8001:8001"
    environment:
      NODE_ENV: development
      PORT: 8000
      USER_SERVICE_PORT: 8001
      DATABASE_URL: postgresql://postgres:postgres@database:5432/nest_next?schema=public
      JWT_SECRET: super-secret-jwt-key
    networks:
      - app-network
    depends_on:
      - database
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:8000/api', (r) => process.exit(r.statusCode === 404 ? 0 : 1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  database:
    image: postgres:15-alpine
    container_name: nest-next-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nest_next
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
